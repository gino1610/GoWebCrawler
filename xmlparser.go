package main

import (
	"bytes"
	"encoding/xml"
)

// var data = []byte(`<?xml version="1.0" encoding="utf-8"?><!--Generated by Screaming Frog SEO Spider 5.1--><urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"><url><loc>https://access.redhat.com/</loc></url><url><loc>http://investors.redhat.com/</loc></url><url><loc>https://www.redhat.com/ja</loc></url></urlset>`)

type XMLNode struct {
	XMLName xml.Name
	Content []byte    `xml:",innerxml"`
	Nodes   []XMLNode `xml:",any"`
}

func XmlParse(data []byte) []string {
	var links []string
	buf := bytes.NewBuffer(data)
	dec := xml.NewDecoder(buf)

	var n XMLNode
	err := dec.Decode(&n)
	if err != nil {
		panic(err)
	}

	walk([]XMLNode{n}, func(n XMLNode) bool {
		if n.XMLName.Local == "loc" {
			// fmt.Println(string(n.Content))
			links = append(links, string(n.Content))
		}
		return true
	})

	return links
}

func walk(nodes []XMLNode, f func(XMLNode) bool) {
	for _, n := range nodes {
		if f(n) {
			walk(n.Nodes, f)
		}
	}
}
